from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Tuple, Optional

class BeautifulInlineKeyboards:
    """–ö–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—Ä–∞—Å–∏–≤—ã—Ö –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä"""
    
    @staticmethod
    def create_approval_keyboard(user_id: int, show_details: bool = False) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –∑–∞—è–≤–æ–∫"""
        builder = InlineKeyboardBuilder()
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        builder.add(InlineKeyboardButton(
            text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", 
            callback_data=f"approve_{user_id}"
        ))
        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", 
            callback_data=f"decline_{user_id}"
        ))
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        if show_details:
            builder.add(InlineKeyboardButton(
                text="üëÅÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ", 
                callback_data=f"details_{user_id}"
            ))
        
        builder.add(InlineKeyboardButton(
            text="üìù –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", 
            callback_data=f"comment_{user_id}"
        ))
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        if show_details:
            builder.adjust(2, 1, 1)  # 2 –∫–Ω–æ–ø–∫–∏ –≤ –ø–µ—Ä–≤–æ–º —Ä—è–¥—É, –ø–æ 1 –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö
        else:
            builder.adjust(2, 1)  # 2 –∫–Ω–æ–ø–∫–∏ –≤ –ø–µ—Ä–≤–æ–º —Ä—è–¥—É, 1 –≤–æ –≤—Ç–æ—Ä–æ–º
        
        return builder.as_markup()
    
    @staticmethod
    def create_news_approval_keyboard(proposal_id: int) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–∏—è/–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π"""
        import logging
        logger = logging.getLogger(__name__)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ proposal_id –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π
        if not isinstance(proposal_id, int) or proposal_id <= 0:
            logger.error(f"KEYBOARD: Invalid proposal_id={proposal_id} (type={type(proposal_id)})")
            raise ValueError(f"Invalid proposal_id: {proposal_id}")
        
        logger.debug(f"KEYBOARD: Creating approval keyboard for proposal_id={proposal_id}")
        
        builder = InlineKeyboardBuilder()
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        approve_callback = f"approve_news_{proposal_id}"
        reject_callback = f"reject_news_{proposal_id}"
        edit_callback = f"edit_news_{proposal_id}"
        comment_callback = f"comment_news_{proposal_id}"
        
        logger.debug(f"KEYBOARD: approve_callback='{approve_callback}' (length={len(approve_callback)})")
        logger.debug(f"KEYBOARD: reject_callback='{reject_callback}' (length={len(reject_callback)})")
        logger.debug(f"KEYBOARD: edit_callback='{edit_callback}' (length={len(edit_callback)})")
        logger.debug(f"KEYBOARD: comment_callback='{comment_callback}' (length={len(comment_callback)})")
        
        builder.add(InlineKeyboardButton(
            text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", 
            callback_data=approve_callback
        ))
        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", 
            callback_data=reject_callback
        ))
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        builder.add(InlineKeyboardButton(
            text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", 
            callback_data=edit_callback
        ))
        builder.add(InlineKeyboardButton(
            text="üìù –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", 
            callback_data=comment_callback
        ))
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        builder.adjust(1, 1, 2)  # –ü–æ 1 –∫–Ω–æ–ø–∫–µ –≤ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö —Ä—è–¥–∞—Ö, 2 –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º
        
        keyboard = builder.as_markup()
        logger.debug(f"KEYBOARD: Created keyboard with {len(keyboard.inline_keyboard)} rows")
        
        return keyboard
    
    @staticmethod
    def create_main_menu_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—É—é –≥–ª–∞–≤–Ω—É—é –∏–Ω–ª–∞–π–Ω –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É"""
        builder = InlineKeyboardBuilder()
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        builder.add(InlineKeyboardButton(
            text="üîç –ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤", 
            callback_data="search_employees"
        ))
        
        # –ù–æ–≤–æ—Å—Ç–∏ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        builder.add(InlineKeyboardButton(
            text="üìù –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å", 
            callback_data="propose_news"
        ))
        builder.add(InlineKeyboardButton(
            text="üìÖ –ì—Ä–∞—Ñ–∏–∫ –∫–æ—Ñ–µ", 
            callback_data="coffee_schedule"
        ))
        
        # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        builder.add(InlineKeyboardButton(
            text="‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", 
            callback_data="admin_panel"
        ))
        builder.add(InlineKeyboardButton(
            text="üõ°Ô∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä –ø–∞–Ω–µ–ª—å", 
            callback_data="moderator_panel"
        ))
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        builder.adjust(2, 2, 2)  # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ –∫–∞–∂–¥–æ–º —Ä—è–¥—É
        
        return builder.as_markup()
    
    @staticmethod
    def create_user_functions_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        builder = InlineKeyboardBuilder()
        
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        builder.add(InlineKeyboardButton(
            text="üîç –ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤", 
            callback_data="search_employees"
        ))
        builder.add(InlineKeyboardButton(
            text="üì• –°–∫–∞—á–∞—Ç—å –∫–æ–Ω—Ç–∞–∫—Ç—ã", 
            callback_data="download_contacts"
        ))
        
        # –ù–æ–≤–æ—Å—Ç–∏ –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        builder.add(InlineKeyboardButton(
            text="üìù –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å", 
            callback_data="propose_news"
        ))
        builder.add(InlineKeyboardButton(
            text="üìÖ –ì—Ä–∞—Ñ–∏–∫ –∫–æ—Ñ–µ", 
            callback_data="coffee_schedule"
        ))
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        builder.adjust(2, 2)  # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ –∫–∞–∂–¥–æ–º —Ä—è–¥—É
        
        return builder.as_markup()
    
    @staticmethod
    def create_admin_panel_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—É—é –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
        builder = InlineKeyboardBuilder()
        
        # --- –ê–¥–º–∏–Ω—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ (—É–Ω–∏–∫–∞–ª—å–Ω—ã–µ) ---
        builder.add(InlineKeyboardButton(text="üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞—è–≤–æ–∫", callback_data="view_requests"))
        builder.add(InlineKeyboardButton(text="üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", callback_data="view_users"))
        builder.add(InlineKeyboardButton(text="üëë –ù–∞–∑–Ω–∞—á–∏—Ç—å —Ä–æ–ª—å", callback_data="assign_role"))
        builder.add(InlineKeyboardButton(text="‚ùå –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data="remove_user"))
        builder.add(InlineKeyboardButton(text="üîî –û—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ", callback_data="send_notification"))
        

        
        # --- –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è ---
        builder.add(InlineKeyboardButton(text="üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è", callback_data="sync_data"))
        builder.add(InlineKeyboardButton(text="üì∫ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–∞–Ω–∞–ª–∞", callback_data="sync_channel"))
        builder.add(InlineKeyboardButton(text="üîó –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞", callback_data="get_invite_link"))
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ç–∫–∏: 3 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
        builder.adjust(3)
        
        return builder.as_markup()
    
    @staticmethod
    def create_moderator_panel_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–≤ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏"""
        builder = InlineKeyboardBuilder()
        
        # –§—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        builder.add(InlineKeyboardButton(
            text="üîç –ü–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤", 
            callback_data="search_employees"
        ))
        
        # –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞
        builder.add(InlineKeyboardButton(
            text="üìÖ –ì—Ä–∞—Ñ–∏–∫ –Ω–∞ –º–µ—Å—è—Ü", 
            callback_data="schedule_month"
        ))
        builder.add(InlineKeyboardButton(
            text="üìÖ –ì—Ä–∞—Ñ–∏–∫ –∫–æ—Ñ–µ", 
            callback_data="coffee_schedule"
        ))
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
        builder.add(InlineKeyboardButton(
            text="üìù –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –Ω–æ–≤–æ—Å—Ç—å", 
            callback_data="propose_news"
        ))
        builder.add(InlineKeyboardButton(
            text="üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", 
            callback_data="send_notification"
        ))
        
        # –ù–∞–∑–∞–¥
        builder.add(InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", 
            callback_data="back_to_main"
        ))
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        builder.adjust(2, 2, 2, 1)  # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ –∫–∞–∂–¥–æ–º —Ä—è–¥—É, –∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
        
        return builder.as_markup()
    
    @staticmethod
    def create_search_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–∏—Å–∫–∞"""
        builder = InlineKeyboardBuilder()
        
        # –¢–∏–ø—ã –ø–æ–∏—Å–∫–∞
        builder.add(InlineKeyboardButton(
            text="üë§ –ü–æ–∏—Å–∫ –ø–æ –§–ò–û", 
            callback_data="search_by_fio"
        ))
        builder.add(InlineKeyboardButton(
            text="üíº –ü–æ–∏—Å–∫ –ø–æ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏", 
            callback_data="search_by_position"
        ))
        
        builder.add(InlineKeyboardButton(
            text="üè¢ –ü–æ–∏—Å–∫ –ø–æ –æ—Ç–¥–µ–ª—É", 
            callback_data="search_by_department"
        ))
        builder.add(InlineKeyboardButton(
            text="üìû –ü–æ–∏—Å–∫ –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É", 
            callback_data="search_by_phone"
        ))
        
        # –ù–∞–∑–∞–¥
        builder.add(InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", 
            callback_data="back_to_main"
        ))
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        builder.adjust(2, 2, 1)  # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö —Ä—è–¥–∞—Ö, 1 –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º
        
        return builder.as_markup()
    

    
    @staticmethod
    def create_marketer_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–∞—Ä–∫–µ—Ç–æ–ª–æ–≥–æ–≤ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç—è–º–∏"""
        builder = InlineKeyboardBuilder()
        
        # –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç—è–º–∏
        builder.add(InlineKeyboardButton(
            text="üì¢ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å", 
            callback_data="publish_news"
        ))
        builder.add(InlineKeyboardButton(
            text="üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ—Å—Ç—å", 
            callback_data="create_news"
        ))
        
        # –ü—Ä–æ—Å–º–æ—Ç—Ä –∏ –º–æ–¥–µ—Ä–∞—Ü–∏—è
        builder.add(InlineKeyboardButton(
            text="üìã –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–æ–≤–æ—Å—Ç–µ–π", 
            callback_data="review_news_proposals"
        ))
        builder.add(InlineKeyboardButton(
            text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π", 
            callback_data="publication_stats"
        ))
        
        # –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
        builder.add(InlineKeyboardButton(
            text="üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫", 
            callback_data="content_scheduler"
        ))
        builder.add(InlineKeyboardButton(
            text="üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", 
            callback_data="statistics"
        ))
        
        # –ù–∞–∑–∞–¥
        builder.add(InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", 
            callback_data="back_to_main"
        ))
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        builder.adjust(2, 2, 2, 1)  # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ –ø–µ—Ä–≤—ã—Ö —Ç—Ä–µ—Ö —Ä—è–¥–∞—Ö, 1 –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º
        
        return builder.as_markup()
    
    @staticmethod
    def create_pagination_keyboard(current_page: int, total_pages: int, 
                                 callback_prefix: str, extra_buttons: List[Tuple[str, str]] = None) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π"""
        builder = InlineKeyboardBuilder()
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        if current_page > 1:
            builder.add(InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", 
                callback_data=f"{callback_prefix}_page_{current_page - 1}"
            ))
        
        builder.add(InlineKeyboardButton(
            text=f"üìÑ {current_page}/{total_pages}", 
            callback_data="current_page"
        ))
        
        if current_page < total_pages:
            builder.add(InlineKeyboardButton(
                text="–í–ø–µ—Ä–µ–¥ ‚û°Ô∏è", 
                callback_data=f"{callback_prefix}_page_{current_page + 1}"
            ))
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        if extra_buttons:
            for text, callback_data in extra_buttons:
                builder.add(InlineKeyboardButton(text=text, callback_data=callback_data))
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        if extra_buttons:
            builder.adjust(3, len(extra_buttons))  # 3 –∫–Ω–æ–ø–∫–∏ –≤ –ø–µ—Ä–≤–æ–º —Ä—è–¥—É, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –≤–æ –≤—Ç–æ—Ä–æ–º
        else:
            builder.adjust(3)  # –í—Å–µ 3 –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É
        
        return builder.as_markup()
    
    @staticmethod
    def create_confirmation_keyboard(action: str, item_id: int, 
                                   confirm_text: str = "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å",
                                   cancel_text: str = "‚ùå –û—Ç–º–µ–Ω–∞") -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
        builder = InlineKeyboardBuilder()
        
        builder.add(InlineKeyboardButton(
            text=confirm_text, 
            callback_data=f"confirm_{action}_{item_id}"
        ))
        builder.add(InlineKeyboardButton(
            text=cancel_text, 
            callback_data=f"cancel_{action}_{item_id}"
        ))
        
        builder.adjust(2)  # 2 –∫–Ω–æ–ø–∫–∏ –≤ –æ–¥–Ω–æ–º —Ä—è–¥—É
        
        return builder.as_markup()
    
    @staticmethod
    def create_role_selection_keyboard(user_id: int) -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""
        builder = InlineKeyboardBuilder()
        
        roles = [
            ("üëë –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä", "admin"),
            ("üõ°Ô∏è –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä", "moderator"),
            ("üì¢ –ú–∞—Ä–∫–µ—Ç–æ–ª–æ–≥", "marketer"),
            ("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", "user")
        ]
        
        for role_name, role_value in roles:
            builder.add(InlineKeyboardButton(
                text=role_name, 
                callback_data=f"assign_role_{user_id}_{role_value}"
            ))
        
        builder.add(InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞", 
            callback_data=f"cancel_role_{user_id}"
        ))
        
        builder.adjust(2, 2, 1)  # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö —Ä—è–¥–∞—Ö, 1 –≤ –ø–æ—Å–ª–µ–¥–Ω–µ–º
        
        return builder.as_markup()
    
    @staticmethod
    def create_quick_actions_keyboard() -> InlineKeyboardMarkup:
        """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±—ã—Å—Ç—Ä—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π"""
        builder = InlineKeyboardBuilder()
        
        # –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è
        builder.add(InlineKeyboardButton(
            text="üìû –ü–æ–∑–≤–æ–Ω–∏—Ç—å", 
            callback_data="quick_call"
        ))
        builder.add(InlineKeyboardButton(
            text="‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å", 
            callback_data="quick_message"
        ))
        
        builder.add(InlineKeyboardButton(
            text="üìç –õ–æ–∫–∞—Ü–∏—è", 
            callback_data="quick_location"
        ))
        builder.add(InlineKeyboardButton(
            text="üìã –î–µ—Ç–∞–ª–∏", 
            callback_data="quick_details"
        ))
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫
        builder.adjust(2, 2)  # –ü–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ –∫–∞–∂–¥–æ–º —Ä—è–¥—É
        
        return builder.as_markup()
    
    @staticmethod
    def create_news_photos_keyboard() -> InlineKeyboardMarkup:
        builder = InlineKeyboardBuilder()
        builder.add(InlineKeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ", callback_data="news_photos_done"))
        return builder.as_markup() 